version: "3.3"
services:
  web:
    build:
      context: .
      dockerfile: Dockerfile.dev
    command: >
      bash -c "
      python /app/mudegrader/manage.py makemigrations &&
      python /app/mudegrader/manage.py migrate &&
      python /app/mudegrader/manage.py collectstatic --noinput &&
      cd ./mudegrader && python -m celery -A mudegrader worker -B -E -l info &
      python /app/mudegrader/manage.py runserver 0.0.0.0:8000
      "
    volumes:
      - .:/app
      - static_volume:/app/mudegrader/staticfiles
      - media_volume:/app/project_files
      - documentation_volume:/app/mudegrader/docs/
    depends_on:
      - db
    env_file:
      - .env

  db:
    container_name: postgres_container
    image: postgres:16-bullseye
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"

  jupyterlab:
    image: jupyter/base-notebook:latest
    container_name: jupyterlab
    environment:
      - JUPYTER_ENABLE_LAB=yes
    volumes:
      - ./project_files/assignments:/home/jovyan/work  # Mounting the same volume
      - ./jupyter_lab_config.py:/home/jovyan/.jupyter/jupyter_lab_config.py
      - local_pgdata:/var/lib/postgresql/data
      - static_volume:/home/jovyan/staticfiles  # Access static files
      - media_volume:/home/jovyan/project_files  # Access media files
    ports:
      - "8888:8888"
    command: start-notebook.sh --NotebookApp.token='my_fixed_token123' --NotebookApp.notebook_dir='/home/jovyan/work' --ServerApp.allow_remote_access=True

  nginx:
    image: nginx:latest
    container_name: nginx_container
    ports:
      - "80:80"
    depends_on:
      - web
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - static_volume:/app/mudegrader/staticfiles/
      # - ./project_files/assignments:/var/www/project_files/assignments  # Mounting the same volume
      - media_volume:/app/project_files/
      - documentation_volume:/app/mudegrader/docs/

  pgadmin:
    image: dpage/pgadmin4:8.6
    restart: always
    depends_on:
      - db
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5050:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin

# REDIS is used as a broker between celery and django within the same docker-compose network
  redis:
      image: redis
      restart: always
      ports:
          - 6379:6379
      volumes:
          - redis_data:/data
      entrypoint: redis-server --appendonly yes

volumes:
  static_volume:
  media_volume:
  local_pgdata:
  pgadmin-data:
  redis_data:
  documentation_volume:
