"""
Django settings for mudegrader project.

Generated by 'django-admin startproject' using Django 5.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""
import os
from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-v)%983n^qkl6q%j$^f5q)t(^_em0ienp0bs3t7!4*b+f6-%842'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

CSRF_TRUSTED_ORIGINS = [
    'https://mude-utilities.citg.tudelft.nl'
]
ALLOWED_HOSTS = ["localhost", "mude-utilities.citg.tudelft.nl", "0.0.0.0"]


# SCHEDULING SETTINGS

CELERY_BROKER_URL = "redis://redis:6379/0"
CELERY_RESULT_BACKEND = "redis://redis:6379/1"

CELERY_TIMEZONE = "Europe/Amsterdam"

CELERY_BEAT_SCHEDULER = 'django_celery_beat.schedulers:DatabaseScheduler'

CELERY_BEAT_SCHEDULE = {}

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'gitlabmanager',
    'graderandfeedbacktool',
    'rest_framework',
    'assignment_manager',
    'authentication',
    'analytics',
    'services',
    'django_celery_beat',

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'authentication.middleware.LoginRequiredMiddleware',
]

AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
)

LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "handlers": {
        "console": {
            "class": "logging.StreamHandler",
        },
    },
    "root": {
        "handlers": ["console"],
        "level": "INFO",
    },
}

# Session settings
SESSION_COOKIE_AGE = 1209600  # 2 weeks in seconds
SESSION_EXPIRE_AT_BROWSER_CLOSE = False
SESSION_SAVE_EVERY_REQUEST = False

ROOT_URLCONF = 'mudegrader.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates/')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'assignment_manager.context_processors.course_context',  # sidebar
                'django.template.context_processors.media',
            ],
            'libraries': {
                'custom_tags': 'template_tags.menu_tags',
            },
        },
    },
]

WSGI_APPLICATION = 'mudegrader.wsgi.application'

# Define the storage location for uploaded files
FILEBROWSER_DIRECTORY = ''

# Define the directory within the storage location
FILEBROWSER_PATH = ''

# Define the full path to the storage location, used by the analytics app to store statistics
FILEBROWSER_STORAGE = ''


# These settings are needed for jupyter lab to operate in iframes
X_FRAME_OPTIONS = 'SAMEORIGIN'
# TODO: it seems this is not used
JUPYTERLAB_DIR = os.path.join(BASE_DIR, 'notebooks')


# Concatenate storage location and directory
upload_folder = os.path.join(FILEBROWSER_STORAGE, FILEBROWSER_DIRECTORY)


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }
# DATABASES = {
#     "default": {
#         "ENGINE": "django.db.backends.postgresql",
#         "OPTIONS": {
#             "service": "my_service",
#             "passfile": ".my_pgpass",
#         },
#     }
# }

if os.getenv("ENV") == "CI":
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': 'postgres',
            'USER': 'postgres',
            'PASSWORD': 'postgres',
            'HOST': 'postgres',
            'PORT': '5432',
         },
    }

else:

    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': 'mudegraderDB',
            'USER': 'robert123',
            'PASSWORD': 'muderobert',
            'HOST': 'db',
            'PORT': '5432',
        }
    }

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_USER_MODEL = 'authentication.CustomUser'

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'CET'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/
# This set of comments basically bundles all of the static files into a single root, so that the server can process them.

STATIC_URL = "/static/"

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, "static"),
)

# This is the location where the static files (that we have in our app) are stored on the server.
# It places static and media files outside of project directory for safety.
STATIC_ROOT = '/app/mudegrader/staticfiles/'


MEDIA_URL = "/project_files/"

# This is the location where the uploaded files (that we have in our app) are stored on the server.
MEDIA_ROOT = os.path.join(os.path.dirname(BASE_DIR), "project_files")



# This is the location where we upload assignments
ASSIGNMENTS_ROOT = os.path.join(MEDIA_ROOT, 'assignments')

ASSIGNMENTS_OTTER_GENERATED_ROOT = os.path.join(ASSIGNMENTS_ROOT, 'otter_generated_files')

# This is the location where we upload submissions
SUBMISSIONS_ROOT = os.path.join(MEDIA_ROOT, 'submissions')

# This is the location where we upload submissions
FEEDBACK_ROOT = os.path.join(MEDIA_ROOT, 'feedback')


# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Middleware settings
LOGIN_URL = '/login/'
LOGIN_EXEMPT_URLS = [
    'login',
]




